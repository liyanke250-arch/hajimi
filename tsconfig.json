{
  // TypeScript 配置文件
  // 创建时间: 2025-08-24 15:35
  //
  // 开发思路:
  // 1. 严格模式配置，确保类型安全
  // 2. Next.js 优化配置，支持 App Router
  // 3. 路径别名配置，简化导入路径
  // 4. 现代 ES 特性支持

  "compilerOptions": {
    // 库支持 - 包含 DOM API 和现代 ES 特性
    "lib": ["dom", "dom.iterable", "es6"],

    // JavaScript 支持 - 允许导入 .js 文件
    "allowJs": true,

    // 跳过库检查 - 提高编译速度
    "skipLibCheck": true,

    // 严格模式 - 启用所有严格类型检查
    "strict": true,

    // 不生成输出文件 - Next.js 处理编译
    "noEmit": true,

    // ES 模块互操作 - 兼容 CommonJS 模块
    "esModuleInterop": true,

    // 模块系统 - 使用最新的 ES 模块
    "module": "esnext",

    // 模块解析策略 - 使用 bundler 策略 (Next.js 14+)
    "moduleResolution": "bundler",

    // JSON 模块支持 - 允许导入 JSON 文件
    "resolveJsonModule": true,

    // 隔离模块 - 每个文件作为独立模块
    "isolatedModules": true,

    // JSX 处理 - 保留 JSX，由 Next.js 处理
    "jsx": "preserve",

    // 增量编译 - 提高后续编译速度
    "incremental": true,

    // Next.js 插件 - 提供 Next.js 特定的类型支持
    "plugins": [
      {
        "name": "next"
      }
    ],

    // 基础路径 - 设置为项目根目录
    "baseUrl": ".",

    // 路径别名 - @/* 映射到 src/* 目录
    // 使用方式: import Component from '@/components/Component'
    "paths": {
      "@/*": ["./src/*"]
    }
  },

  // 包含的文件 - TypeScript 需要处理的文件
  "include": [
    "next-env.d.ts", // Next.js 类型定义
    "**/*.ts", // 所有 TypeScript 文件
    "**/*.tsx", // 所有 TypeScript React 文件
    ".next/types/**/*.ts" // Next.js 生成的类型文件
  ],

  // 排除的文件 - 不需要 TypeScript 处理
  "exclude": ["node_modules"]
}
